{"version":3,"file":"static/js/656.4c3e8ff6.chunk.js","mappings":"4MACA,EAAwB,4BAAxB,EAA4D,4B,2DCQ/CA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IAC5BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAQxBC,GAASC,EAAAA,EAAAA,IAAO,CACpBC,MAAMC,EAAAA,EAAAA,MAASC,WACfC,OAAOF,EAAAA,EAAAA,MAASE,QAAQD,WACxBE,UAAUH,EAAAA,EAAAA,MAASI,IAAI,EAAG,gCAAgCH,aAG5D,OACE,gCACGN,GACCU,EAAAA,OAAAA,QACE,4DAEFb,GAAiBc,EAAAA,QAAAA,UACnB,SAAC,KAAD,CACEC,cAAe,CAAER,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAChDK,SArBe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BpB,GAASqB,EAAAA,EAAAA,IAAaF,IACtBC,IACAlB,GAAiBc,EAAAA,QAAAA,SAAiB,UACnC,EAkBKM,iBAAkBf,EAHpB,UAKE,UAAC,KAAD,YACE,mBAAOgB,UAAWC,EAAlB,kBAEE,SAAC,KAAD,CAAcC,UAAU,MAAMhB,KAAK,UACnC,SAAC,KAAD,CAAOiB,KAAK,OAAOjB,KAAK,OAAOc,UAAWC,QAE5C,mBAAOD,UAAWC,EAAlB,mBAEE,SAAC,KAAD,CAAcC,UAAU,MAAMhB,KAAK,WACnC,SAAC,KAAD,CAAOiB,KAAK,OAAOjB,KAAK,QAAQc,UAAWC,QAE7C,mBAAOD,UAAWC,EAAlB,sBAEE,SAAC,KAAD,CAAcC,UAAU,MAAMhB,KAAK,cACnC,SAAC,KAAD,CAAOiB,KAAK,OAAOjB,KAAK,WAAWc,UAAWC,QAEhD,mBAAQE,KAAK,SAAb,6BAKT,ECtDD,EAJiB,WACf,OAAO,SAAC3B,EAAD,GACR,C","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"RegisterForm_label__4pTXF\",\"input\":\"RegisterForm_input__FsgBz\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { object, string } from 'yup';\nimport css from './RegisterForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerUser } from 'redux/auth/authOperations';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\nimport { getErrorUser, getIsLoadingUser } from 'redux/auth/authSelectors';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const isUserLoading = useSelector(getIsLoadingUser);\n  const userError = useSelector(getErrorUser);\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(registerUser(values));\n    resetForm();\n    isUserLoading && Loading.standard('Loading');\n  };\n\n  const schema = object({\n    name: string().required(),\n    email: string().email().required(),\n    password: string().min(7, ' Too Short! Minimum 7 symbol').required(),\n  });\n\n  return (\n    <>\n      {userError &&\n        Notify.failure(\n          'Something went wrong please try to reload page or LogIn'\n        )}\n      {!isUserLoading && Loading.remove()}\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Form>\n          <label className={css.label}>\n            Name\n            <ErrorMessage component=\"div\" name=\"name\" />\n            <Field type=\"text\" name=\"name\" className={css.input}></Field>\n          </label>\n          <label className={css.label}>\n            Email\n            <ErrorMessage component=\"div\" name=\"email\" />\n            <Field type=\"mail\" name=\"email\" className={css.input}></Field>\n          </label>\n          <label className={css.label}>\n            Password\n            <ErrorMessage component=\"div\" name=\"password\" />\n            <Field type=\"text\" name=\"password\" className={css.input}></Field>\n          </label>\n          <button type=\"submit\">Register</button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\n\nexport default Register;\n"],"names":["RegisterForm","dispatch","useDispatch","isUserLoading","useSelector","getIsLoadingUser","userError","getErrorUser","schema","object","name","string","required","email","password","min","Notify","Loading","initialValues","onSubmit","values","resetForm","registerUser","validationSchema","className","css","component","type"],"sourceRoot":""}